import{_ as n,o as s,c as a,d as t}from"./app.73a0ea12.js";const p={},o=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">node</span> dist/index.js create testName
/Users/zhengzhuang/example/node-example/cli/demo-cli/dist/index.js:2
<span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>var <span class="token assign-left variable">e</span><span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&quot;commander&quot;</span><span class="token punctuation">)</span>,n<span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span>,o<span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span>,t<span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&quot;readline&quot;</span><span class="token punctuation">)</span>,r<span class="token operator">=</span>require<span class="token punctuation">(</span><span class="token string">&quot;inquirer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> s<span class="token punctuation">(</span>e,n,o,t<span class="token punctuation">)</span><span class="token punctuation">{</span>return new<span class="token punctuation">(</span>o<span class="token operator">||</span><span class="token punctuation">(</span>o<span class="token operator">=</span>Promise<span class="token punctuation">))</span><span class="token variable"><span class="token punctuation">((</span>function<span class="token punctuation">(</span>r<span class="token punctuation">,</span>s<span class="token punctuation">)</span>{function c<span class="token punctuation">(</span>e<span class="token punctuation">)</span>{try{a<span class="token punctuation">(</span>t.next<span class="token punctuation">(</span>e<span class="token punctuation">))</span></span><span class="token punctuation">}</span>catch<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>s<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>function i<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>try<span class="token punctuation">{</span>a<span class="token punctuation">(</span>t.throw<span class="token punctuation">(</span>e<span class="token punctuation">))</span><span class="token punctuation">}</span>catch<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>s<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>function a<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>var n<span class="token punctuation">;</span>e.done?r<span class="token punctuation">(</span>e.value<span class="token punctuation">)</span>:<span class="token punctuation">(</span>n<span class="token operator">=</span>e.value,n instanceof o?n:new o<span class="token variable"><span class="token punctuation">((</span>function<span class="token punctuation">(</span>e<span class="token punctuation">)</span>{e<span class="token punctuation">(</span>n<span class="token punctuation">)</span>}<span class="token punctuation">))</span></span><span class="token punctuation">)</span>.then<span class="token punctuation">(</span>c,i<span class="token punctuation">)</span><span class="token punctuation">}</span>a<span class="token variable"><span class="token punctuation">((</span>t<span class="token operator">=</span>t.apply<span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token operator">||</span>[]<span class="token punctuation">))</span></span>.next<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">}</span><span class="token punctuation">))</span><span class="token punctuation">}</span>const <span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>const <span class="token assign-left variable">e</span><span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&quot;</span>.repeat<span class="token punctuation">(</span>process.stdout.rows<span class="token punctuation">)</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span>e<span class="token punctuation">)</span>,t.cursorTo<span class="token punctuation">(</span>process.stdout,0,0<span class="token punctuation">)</span>,t.clearScreenDown<span class="token punctuation">(</span>process.stdout<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>var <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">;</span>const <span class="token assign-left variable">a</span><span class="token operator">=</span>new e.Command<span class="token punctuation">;</span>a.version<span class="token punctuation">(</span>i<span class="token punctuation">)</span>.command<span class="token punctuation">(</span><span class="token string">&quot;create &lt;name&gt;&quot;</span><span class="token punctuation">)</span>.description<span class="token punctuation">(</span><span class="token string">&quot;\u521B\u5EFA\u65B0\u7684\u9879\u76EE&quot;</span><span class="token punctuation">)</span>.action<span class="token variable"><span class="token punctuation">((</span>e<span class="token operator">=</span><span class="token operator">&gt;</span>{<span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token operator">&gt;</span>{s<span class="token punctuation">(</span>void <span class="token number">0</span><span class="token punctuation">,</span>void <span class="token number">0</span><span class="token punctuation">,</span>void <span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">(</span>function<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span>{const t<span class="token operator">=</span>n.join<span class="token punctuation">(</span>process.cwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>o.existsSync<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>c<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>const s<span class="token operator">=</span>yield r.prompt<span class="token punctuation">(</span>[{type<span class="token operator">:</span>&quot;input&quot;<span class="token punctuation">,</span>message<span class="token operator">:</span>&quot;\u8BBE\u7F6E\u4E00\u4E2A\u7528\u6237\u540D<span class="token operator">:</span>&quot;<span class="token punctuation">,</span>name<span class="token operator">:</span>&quot;name&quot;<span class="token punctuation">,</span>default<span class="token operator">:</span>&quot;test_user&quot;}]<span class="token punctuation">)</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span>&quot;answers&quot;<span class="token punctuation">,</span>s<span class="token punctuation">)</span>}<span class="token punctuation">))</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">))</span>,a.parse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                                                                                  ^

Error <span class="token punctuation">[</span>ERR_REQUIRE_ESM<span class="token punctuation">]</span>: require<span class="token punctuation">(</span><span class="token punctuation">)</span> of ES Module /Users/zhengzhuang/example/node-example/cli/demo-cli/node_modules/inquirer/lib/inquirer.js from /Users/zhengzhuang/example/node-example/cli/demo-cli/dist/index.js not supported.
Instead change the require of inquirer.js <span class="token keyword">in</span> /Users/zhengzhuang/example/node-example/cli/demo-cli/dist/index.js to a dynamic import<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">which</span> is available <span class="token keyword">in</span> all CommonJS modules.
    at Object.<span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token punctuation">(</span>/Users/zhengzhuang/example/node-example/cli/demo-cli/dist/index.js:2:99<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code: <span class="token string">&#39;ERR_REQUIRE_ESM&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728ts\u9879\u76EE\u4E2D\uFF0C\u7531\u4E8E<code>inquirer</code>\u7248\u672C\u8FC7\u9AD8\u5BFC\u81F4</p><h3 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token string">&quot;inquirer&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;^8.2.0&quot;</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B89\u88C5\u4F4E\u7248\u672C\u6216\u80058.\u51E0\u7248\u672C\uFF0C\u5C31\u53EF\u89E3\u51B3</p>`,5),e=[o];function c(u,i){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","inquirer\u62A5\u9519Error.html.vue"]]);export{k as default};
